#include<iostream>
class Node{
    public:
    int val;
    Node*next;
    Node*prev;
    Node(int val){
        this->val=val;
        this->next=NULL;
        this->prev=NULL;
    }
};
class DLL{
    public:
    Node*head;
    Node*tail;
    int size=0;
    DLL(){
        head=tail=NULL;
        size=0;
    }
    void insertatend(int val){
        Node*temp=new Node(val);
        if(size==0) head=tail=temp;
        else{
            tail->next=temp;
            temp->prev=tail;
            tail=temp;
        }
        size++;
    }
    // void display(){
    //     Node*temp=tail;
    //     while(temp!=NULL){
    //         std::cout<<temp->val<<" ";
    //         temp=temp->prev;
    //     }
    // }
    void insertathead(int val){
        Node*temp=new Node(val);
        if(size==0) head=tail=temp;
        else{
            temp->next=head;
            head->prev=temp; //extra space use hogi 
            head=temp;
        }
        std::cout<<std::endl;
    }
    void insertatidx(int idx,int val){
        if(idx<0 || idx>size) std::cout<<"Invalid index";
        else if(idx==0) insertathead(val);
        else if(idx==size) insertatend(val);
        else{
            Node*t=new Node(val);
            Node*temp=head;
            for(int i=1;i<=idx-1;i++){
                temp=temp->next;
            }
            t->next=temp->next;
            temp->next=t;
            t->prev=temp;
            t->next->prev=t;
            size++;
        }
        
        }
    void display(){
        Node*temp=head;
        while(temp!=NULL){
            std::cout<<temp->val<<" ";
            temp=temp->next;
        }
        std::cout<<std::endl;
    }
    
};
int main(){
    DLL ll;
    ll.insertatend(10);
    ll.insertatend(20);
    ll.insertatend(30);
    ll.insertatend(40);
    ll.insertatend(50);
    ll.display();
    ll.insertatidx(3,80);
    ll.display();
    
    
    
}