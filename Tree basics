#include<iostream>
#include<algorithm>
class Node{
    public:
    int val;
    Node*left;
    Node*right;
    Node(int val){
        this->val=val;
        this->left=NULL;
        this->right=NULL;
    }
};

int height(Node*root){
    if(root==NULL) return 0;
    int ans=1+std::max(height(root->left),height(root->right));
    return ans;
    
}
int sum(Node*root){
    if(root==NULL) return 0;
    int ans=root->val+sum(root->left)+sum(root->right);
    return ans;
}
int size(Node*root){
    if(root==NULL) return 0;
    int ans=1+size(root->left)+size(root->right);
    return ans;
}
void display(Node*root){
    if(root==NULL)return;
    std::cout<<root->val<<" ";
    display(root->left);
    display(root->right);
}
int maxvalue(Node*root){
    if(root==NULL) return 0;
    int lmax=maxvalue(root->left);
    int rmax=maxvalue(root->right);
    return std::max(root->val,std::max(lmax,rmax));
}
int main(){
    Node*a=new Node(10);
    Node*b=new Node(20);
    Node*c=new Node(30);
    Node*d=new Node(40); 
    Node*e=new Node(50);
    Node*f=new Node(60);
    Node*g=new Node(70);
    a->left=b;
    a->right=c;
    b->left=d;
    b->right=e;
    c->left=f;
    c->right=g;
    display(a);
    std::cout<<std::endl;
    std::cout<<sum(a)<<" and  "<<size(a)<<" "<<height(a)<<std::endl;
    std::cout<<"Maximum value : "<<maxvalue(a)<<std::endl;
    
    
}
