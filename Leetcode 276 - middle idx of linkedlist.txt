#include<iostream>
class Node{
    public:
    int val;
    Node*next;
    Node(int v){
        this->val=v; 
        this->next=NULL;
    }
};
// Node* middlelist(Node*head){
//     int size=0;
//     Node*temp=head;
//     while(temp!=NULL){
//         temp=temp->next;
//         size++;
//     }
//     int mididx=size/2;
//     Node*mid=head;
//     for(int i=1;i<=mididx;i++){
//         mid=mid->next;
//     }
//     return mid;
// }
Node* middlelist(Node*head){
    Node*slow=head;
    Node*fast=head;
    while(fast->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
}
int main(){
    Node*a=new Node(10);
    Node*b=new Node(20);
    Node*c=new Node(30);
    Node*d=new Node(40);
    Node*e=new Node(50);
    a->next=b;
    b->next=c;
    c->next=d;
    d->next=e;
    Node*mid=middlelist(a);
    while(mid!=NULL){
        std::cout<<mid->val<<" ";
        mid=mid->next;
    }
    
}