/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        
        ListNode*dummy=new ListNode(0); //creating a dummy node;
        dummy->next=head;//dummy->1
        ListNode*prev=dummy;
        for(int i=1;i<left;i++){
            prev=prev->next;
        }
        
        //start reversing 
        ListNode*curr=prev->next;  //node 2
        ListNode*next=nullptr;
        for(int i=0;i<right-left;i++){
            next=curr->next; //next--3
            curr->next=next->next;
            next->next=prev->next;
            prev->next=next;
        }
        return dummy->next;//head 
    }
};