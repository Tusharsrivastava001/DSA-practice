#include<iostream>
class Node{
    public:
    std::string name;
    std::string course;
    int id;
    int age;
    Node*next;
    Node(int id,int age,std::string name,std::string course){
        this->id=id;
        this->age=age;
        this->name=name;
        this->course=course;
        this->next=NULL;
    }
};
class Linkedlist{
    public:
    Node*head;
    Node*tail;
    int size;
    Linkedlist(){
        head=tail=NULL;
        size=0;
    }
    void addstudent(int id,int age,std::string name,std::string course){
        Node*temp=new Node(id,age,name,course);
        if(size==0){
            head=tail=temp;
        }
        else{
            tail->next=temp;
            tail=temp;
        }
        size++;
        std::cout<<"Student added Successfully!"<<std::endl;
    }
    void display(){
        Node*temp=head;
        std::cout<<"Student Records"<<std::endl;
        while(temp!=NULL){
            std::cout<<"ID: "<<temp->id<<std::endl;
            std::cout<<"Name: "<<temp->name<<std::endl;
            std::cout<<"Age: "<<temp->age<<std::endl;
            std::cout<<"Course: "<<temp->course<<std::endl;
            temp=temp->next;
        }
    }
    void searchbyid(int id){
        Node*temp=head;
        while(temp!=NULL){
            if(temp->id==id){
                std::cout<<"Student Found id: "<<temp->id<<std::endl;
                std::cout<<"Name: "<<temp->name<<std::endl;
                std::cout<<"Age: "<<temp->age<<std::endl;
                std::cout<<"Course: "<<temp->course<<std::endl;
            }
            temp=temp->next;
        }
        std::cout<<"Student with Id: "<<id<<"Not found"<<std::endl;
    }
    void updatestudent(int id){
        Node*temp=head;
        while(temp!=NULL){
            if(temp->id==id){
                std::cout<<"Enter the new name: "<<std::endl;
                std::cin.ignore();
                std::getline(std::cin,temp->name);
                std::cout<<"Enter New age"<<std::endl;
                std::cin>>temp->age;
                std::cout<<"Enter the new coursr"<<std::endl;
                std::cin.ignore();
                std::getline(std::cin,temp->course);
                std::cout<<"Student details updated successfully!";
                return;
            }
            temp=temp->next;
        }
        std::cout<<"Student with ID "<<id<<" not found."<<std::endl;
    }
    void deleteatfront(){
        if(size==0){
            std::cout<<"No student to delete"<<std::endl;
        }
        else{
            head=head->next;
            size--;
        }
    }
    void deleteatend(){
        if(size==0){
            std::cout<<"No student to delete"<<std::endl;
        }
        else{
            Node*temp=head;
            while(temp->next!=NULL){
                temp=temp->next;
            }
            temp->next=NULL;
            temp=NULL;
            size--;
        }
    }
    void deleteStudent(int id){
        if(id==0){
            deleteatfront();
            return;
        }
        else{
        Node*temp=head;
        for(int i=1;i<=id-1;i++){
            temp=temp->next;
        }
        temp->next=temp->next->next;
        size--;
        }
    }
};
int main(){
   Linkedlist studentlist;
   int id,age,choice;
   std::string name,course;
   while(true){
       std::cout << "\n--- Student Management System ---\n";
        std::cout << "1. Add Student\n";
        
        std::cout << "2. Display Students\n";
        std::cout << "3. Search Student\n";
        std::cout << "4. Update Student\n";
        std::cout << "5. Delete Student\n";
        std::cout << "6. Exit\n";
       std::cin>>choice;
       if(choice==1){ // Add the Student in the List
           std::cout<<"Enter Student ID: ";
           std::cin>>id;
           std::cout<<"Enter Name: ";
           std::cin.ignore();
           getline(std::cin,name);
           std::cout<<"Enter Age: ";
           std::cin>>age;
           std::cout<<"Enter the course";
           std::cin.ignore();
           std::getline(std::cin,course);
           studentlist.addstudent(id,age,name,course);
       }
       else if(choice==2){ // Student dispplay
            studentlist.display();
       }
       else if(choice==3){
           std::cout<<"Enter the Student ID to seach: ";
           std::cin>>id;
           studentlist.searchbyid(id);
       }
       else if(choice==4){
           std::cout<<"Enter the Student ID to Update";
           std::cin>>id;
           studentlist.updatestudent(id);
       }
       else if(choice==5){
           std::cout<<"Enter the Student Id to delete";
           std::cin>>id;
           studentlist.deleteStudent(id);
       }
       else if(choice==6){
           std::cout<<"Existing......"<<std::endl;
           break;
       }
       else{
           std::cout<<"Invalid choice";
       }
   }
   
}
